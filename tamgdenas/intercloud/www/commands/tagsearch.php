<?require_once $_SERVER['DOCUMENT_ROOT'].'/modules/command.php';require_once $_SERVER['DOCUMENT_ROOT'].'/modules/stemming.php';class Thezaurus{	private $conn;	function __construct($host='217.199.220.183', $user='postgres', $pass='qwerty')	{		$this->conn = pg_connect("host=$host dbname=tesaurus user=$user password=$pass");	}		function getHyponims($word)	{		$out = array();		$q = array(			"select item as res from words where word='$word' and type='Гипонимы';",			"select word as res from words where item='$word' and type='Гиперонимы';"		);				foreach($q as $query)		{			$result = pg_query($this->conn, $query) or die('Query failed: ' . pg_last_error());				while ($row = pg_fetch_array($result, null, PGSQL_ASSOC))			{				$out[$row['res']]=true;			}		}				return array_keys($out);	}		function getSynonims($word)	{		$out = array();		$q = array(			"select item as res from words where word like '%$word%' and type='Синонимы';",			"select word as res from words where item like '%$word%' and type='Синонимы';"		);				foreach($q as $query)		{			$result = pg_query($this->conn, $query) or die('Query failed: ' . pg_last_error());				while ($row = pg_fetch_array($result, null, PGSQL_ASSOC))			{				$out[$row['res']]=true;			}		}				return array_keys($out);	}}/*** Теговые ссылки*/class Tagsearch{	/**	*		*/		function get($tags, $urlMask)	{		if($tags) $tags = json_decode($tags);		global $db;						$tez = new Thezaurus();				$buf = array();		$hyp = array();		$syn = array();		foreach($tags as $tag)		{			$rec = stemString($tag);//оставляем основу слова			$tag = $rec[0];			$rec = array_merge($rec, $tez->getHyponims($tag));//находим гипонимы			$rec = array_merge($rec, $tez->getSynonims($tag));//находим синонимы						$buf[] = $rec;		}				return $buf;				//запрос должен строиться таким образом, чтобы объединять записи buf логикой "И", а слова внутри записи - "ИЛИ" 		//также необхоидмо попробовать встроенный текстовый поиск mongodb 				//$db->tagLinks->find(array());			}	}?>