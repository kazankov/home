<?function sqr($x){	return $x*$x;}require_once $_SERVER['DOCUMENT_ROOT'].'/modules/command.php';/*** Список POI*/class Pois{	/**	*	поиск POI по заданным критериям <br><br>	*   types - список типов (пример -  ["519d26139fe5c302c100012a", "519d25e39fe5c302c10000dc"] ) <br>	*	bounds - прямоугольная гео-область, две пары координат широта/долгота: юг/запад, север/восток (пример - [[55.667662,37.690487],[55.7025,37.769451]] ) <br>	*   locaion - центр сортировки, ближайшие будут выводиться в начале (пример - {"lat":55.7023996,"lon":37.6936055} )	*/	function get($types, $bounds, $location)	{		global $db;		$poitypes = array();		if($types) 		{			$buf = json_decode($types);			foreach($buf as $iter)			{				$poitypes[]=new MongoId($iter);			}		}		$out = array();		$limit = 1000;		$cursor=null;		$params = array();		if(count($poitypes) > 0)		{			$params = array('types'=>array('$in'=>$poitypes));		}		if($bounds && !$location)		{			$params['geoPoint'] = array('$within'=>array('$box'=> json_decode($bounds)));			}				if($location && !$bounds)		{			$params['geoPoint']= array('$near'=>json_decode($location));		}				if($location && $bounds)		{			list(list($s, $w), list($n, $e)) = json_decode($bounds);			$cx = ($w+$e)/2;			$cy = ($s+$n)/2;			$r = sqrt(sqr(($w - $e)/2) + sqr(($s - $n)/2));							$params['geoPoint'] = array(				'$near'=>json_decode($location), '$maxDistance'=> $r			);		}				return fixMongoId(iterator_to_array($db->poi->find($params, array('_id'=>true, 'name'=>true))->limit($limit), false));	}	}?>