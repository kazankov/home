<?require_once $_SERVER['DOCUMENT_ROOT'].'/modules/command.php';/*** Полльзователь*/class User{	private function checkAndNormUrls($userId, $urls)	{		global $db;		if(!$urls) return null;				$urls = json_decode($urls);		$out = array();				foreach($urls as $url)		{			$url = normUrl($url);			if($user = $db->users->findOne(array('urls' => $url)))			{				if(!$userId || $user['_id'] != $userId) error("URL {$url} уже пренадлежит другому пользователю");			}			$out[] = $url;		}		return $out;	}	/**	*	получить 	*/	function get($id)	{		global $db;		return fixMongoId($db->users->findOne(array('_id' => new MongoId($id))));	}	/**	*	Удалить 	*/	function delete($id)	{		global $db;		$buf = $db->users->remove(array('_id' => new MongoId($id)), array("justOne" => true));		return !!$buf['ok'];	}			/**	*	Создать 	*/	function put($urls, $data)	{		global $db;				$urls = $this->checkAndNormUrls(null, $urls);				$obj = 	array(			'urls'=>$urls,			'data'=>$data		);				if(!$db->users->insert($obj))error('Ошибка записи в базу');		return fixMongoId($obj);	}	/**	*	Редактировать  	*/		function post($id, $urls, $data)	{		if(!$id)error('Id не указан');		global $db;				$obj = $db->users->findOne(array('_id' => new MongoId($id)));				if(!$obj) error("Пользователь с идентификатором {$id} не существует");				$urls = $this->checkAndNormUrls($id, $urls);				$obj['urls'] = $urls;		$obj['data'] = $data;				if(!$db->users->update(array('_id' => new MongoId($id)), $obj))error('Ошибка записи в базу');		return fixMongoId($obj);		}		}?>