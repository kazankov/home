<?require_once $_SERVER['DOCUMENT_ROOT'].'/modules/command.php';/***  Cсылки rdf*/class Rdflinks{	/**		* Добавление ссылки между двумя сущностями <br>	* url1 - url первой сущности (пример facebook.com/ivanov)<br>	* url2 - url второй сущности (пример facebook.com/ivanovJr)<br>	* predicate - тип связи, предикат (пример fatherOf)	*/		function put($url1, $url2, $predicate)	{		if(!$url1) error('url1 не указан');		if(!$url2) error('url2 не указан');		if(!$predicate) error('Предикат не указан');				global $db;		$url1 = normUrl($url1);		$url2 = normUrl($url2);				$obj = $db->rdfLinks->findOne(array('url1'=>$url1, 'url2'=>$url2, 'predicate'=>$predicate));		if($obj) return fixMongoId($obj); 				$obj = array('url1'=>$url1, 'url2'=>$url2, 'predicate'=>$predicate);				if(!$db->rdfLinks->save($obj))error('Ошибка записи в базу');			return fixMongoId($obj); 			}	/**	* Получение ссылок сущности <br>	* url - url  сущности (пример facebook.com/ivanov)<br>	* predicate - тип связи, предикат (пример fatherOf  - дети Иванова), может быть не указан (тогда будут выданы все ссылки)<br>	* reverse  - флаг обратной ссылки: если включен, то будут найдены ссылки на эту сущность (1 - отцы Иванова) 	*/		function get($url, $predicate, $reverse)	{		if(!$url) error('url не указан');				global $db;		$url = normUrl($url);						$params = null;		if(!$reverse)		{			$params = array('url1'=>$url);		}else{			$params = array('url2'=>$url);		}				if($predicate) $params['predicate'] = $predicate;		return fixMongoId(iterator_to_array($db->rdfLinks->find($params)));			}		/**	* Удаление ссылки между двумя сущностями <br>	* url1 - url первой сущности (пример facebook.com/ivanov)<br>	* url2 - url второй сущности (пример facebook.com/ivanovJr)<br>	* predicate - тип связи, предикат (пример fatherOf)	*/		function delete($url1, $url2, $predicate)	{		if(!$url1) error('url1 не указан');		if(!$url2) error('url2 не указан');		if(!$predicate) error('Предикат не указан');				global $db;		$url1 = normUrl($url1);		$url2 = normUrl($url2);				$buf = $db->rdfLinks->remove(array('url1'=>$url1, 'url2'=>$url2, 'predicate'=>$predicate), array("justOne" => true, 'safe'=>true));		return !!$buf['ok'];		}	}?>